use ("renta_autos");

// 1.obtener todos los clientes
 db.Cliente.find();

  //2. Obtener todos los automóviles disponibles para alquiler:
  db.Automovil.find({}).pretty();

  //3. Listar todos los alquileres activos junto con los datos de los clientes relacionados
db.Alquiler.aggregate([
    {
      $match: { Estado: 'Activo' }
    },
    {
      $lookup: {
        from: 'Cliente',
        localField: 'ID_Cliente',
        foreignField: 'ID_Cliente',
        as: 'ClienteData'
      }
    }
  ]);

  // 4.Mostrar todas las reservas pendientes con los datos del cliente y el automóvil reservado
  db.Reserva.aggregate([
    {
      $match: { Estado: 'Pendiente' }
    },
    {
      $lookup: {
        from: 'Cliente',
        localField: 'ID_Cliente',
        foreignField: 'ID_Cliente',
        as: 'ClienteData'
      }
    },
    {
      $lookup: {
        from: 'Automovil',
        localField: 'ID_Automovil',
        foreignField: 'ID_Automovil',
        as: 'AutomovilData'
      }
    }
  ]);

  //5.Obtener los detalles del alquiler con el ID_Alquilerespecífico

  db.Alquiler.findOne({ ID_Alquiler: 1 });

    //.6 Listar los empleados con el cargo de "Vendedor"
    db.Empleado.find({ Cargo: 'Vendedor' }).pretty();

     //.7 Mostrar la cantidad total de automóviles disponibles en cada sucursal:
  db.Sucursal_Automovil.aggregate([
    {
      $group: {
        _id: "$ID_Sucursal",
        Total_Automoviles_Disponibles: { $sum: "$Cantidad_Disponible" }
      }
    }
  ]);

    //.8 obtener el costo total de un alquiler específico (por ejemplo, alquiler con ID_Alquiler = 1):
    db.Alquiler.aggregate([
        {
          $match: { ID_Alquiler: 1 }
        },
        {
          $lookup: {
            from: 'Automovil',
            localField: 'ID_Automovil',
            foreignField: 'ID_Automovil',
            as: 'AutomovilData'
          }
        },
        {
          $unwind: "$AutomovilData"
        },
        {
          $project: {
            ID_Alquiler: 1,
            Costo_Total: { $multiply: ["$AutomovilData.Precio_Diario", { $divide: [{ $subtract: ["$Fecha_Fin", "$Fecha_Inicio"] }, (1000 * 60 * 60 * 24)] }] }
          }
        }
      ]);

      //.9 Listar los clientes con el DNI específico (por ejemplo, DNI = '123456789'):
 db.Cliente.find({ DNI: '123456789' }).pretty();